<?xml version="1.0" encoding="utf-8"?>
<testExecutions version="1">
    <file path="test\_enums\store.type.enum.spec.ts">
        <testCase name="store.type.enum.ts tests test EStoreType fields" duration="1"/>
    </file>
    <file path="test\functions\action\add.action.cronjobs.spec.ts">
        <testCase name="add.action.cronjobs tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\action\add.action.watchers.spec.ts">
        <testCase name="add.action.watchers tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\action\add.action.workers.spec.ts">
        <testCase name="add.action.workers tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\execute\execute.cronjob.spec.ts">
        <testCase name="execute.cronjob tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\execute\execute.on.files.recursively.spec.ts">
        <testCase name="execute.on.files.recursively tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\execute\execute.processes.in.folder.spec.ts">
        <testCase name="execute.processes.in.folder tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\execute\execute.watcher.spec.ts">
        <testCase name="execute.watcher tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\execute\execute.worker.spec.ts">
        <testCase name="execute.worker tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\initiate.cronjobs.spec.ts">
        <testCase name="initiate.cronjobs.ts tests initiateCronjobs exists" duration="0"/>
        <testCase name="initiate.cronjobs.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\initiate.watchers.spec.ts">
        <testCase name="initiate.watchers.ts tests initiateWatchers exists" duration="0"/>
        <testCase name="initiate.watchers.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\initiate.workers.spec.ts">
        <testCase name="initiate.workers.ts tests initiateWorkers exists" duration="0"/>
        <testCase name="initiate.workers.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\performance\get.hrtime.as.number.spec.ts">
        <testCase name="get.hrtime.as.number tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\performance\get.milliseconds.from.spec.ts">
        <testCase name="get.milliseconds.from tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\functions\performance\get.seconds.from.spec.ts">
        <testCase name="get.seconds.from tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\middleware\data.middleware.map.spec.ts">
        <testCase name="data.middleware.map.ts tests DataMiddlewareMap exists" duration="0"/>
        <testCase name="data.middleware.map.ts tests DataMiddlewareMap functionality" duration="0"/>
    </file>
    <file path="test\mongodb\collections.models.map.spec.ts">
        <testCase name="collections.models.map.ts tests CollectionsModelsMap exists" duration="0"/>
        <testCase name="collections.models.map.ts tests CollectionsModelsMap empty functionality" duration="0"/>
    </file>
    <file path="test\mongodb\functions\index\add.down.indices.to.attributes.spec.ts">
        <testCase name="add.down.indices.to.attributes tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\functions\index\add.index.to.attributes.spec.ts">
        <testCase name="add.index.to.attributes tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\functions\index\add.up.and.down.indices.to.attributes.spec.ts">
        <testCase name="add.up.and.down.indices.to.attributes tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\functions\index\add.up.indices.to.attributes.spec.ts">
        <testCase name="add.up.indices.to.attributes tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\functions\observable.database.spec.ts">
        <testCase name="owservable.database.ts tests observableDatabase exists" duration="1"/>
        <testCase name="owservable.database.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\functions\observable.model.spec.ts">
        <testCase name="owservable.model.ts tests observableModel exists" duration="0"/>
        <testCase name="owservable.model.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\functions\process.models.spec.ts">
        <testCase name="process.models.ts tests processModels exists" duration="0"/>
        <testCase name="process.models.ts tests _processFile" duration="0"/>
        <testCase name="process.models.ts tests _isExcluded" duration="0"/>
        <testCase name="process.models.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\mongodb\mongodb.connector.spec.ts">
        <testCase name="mongodb.connector.ts tests MongoDBConnector exists" duration="0"/>
        <testCase name="mongodb.connector.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\owservable.client.spec.ts">
        <testCase name="owservable.client.ts tests OwservableClient exists" duration="0"/>
        <testCase name="owservable.client.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\owservable.spec.ts">
        <testCase name="owservable.ts tests Owservable exists" duration="0"/>
        <testCase name="owservable.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\store\a.store.spec.ts">
        <testCase name="a.store.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\store\collection.store.spec.ts">
        <testCase name="collection.store.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\store\count.store.spec.ts">
        <testCase name="count.store.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\store\document.store.spec.ts">
        <testCase name="document.store.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
    <file path="test\store\factories\store.factory.spec.ts">
        <testCase name="store.factory.ts tests should be implemented" duration="0">
            <skipped message="skipped">skipped</skipped>
        </testCase>
    </file>
</testExecutions>